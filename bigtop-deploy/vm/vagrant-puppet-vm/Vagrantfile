# -*- mode: ruby -*-
# vi: set ft=ruby :

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "yaml"

_config = YAML.load(File.open(File.join(File.dirname(__FILE__), "vagrantconfig.yaml"), File::RDONLY).read)
CONF = _config

# Repository
# Example for testing a Release candidate.
repo = CONF['repo']
# repo = "http://bigtop.s3.amazonaws.com/releases/0.7.0/redhat/6/x86_64"

# Which Linux Distribution to use. Right now only centos is tested
distro = CONF['distro']

# number of instances
num_instances = CONF['num_instances']

# hadoop ecosystem components
components = CONF['components']

# Whether to run smoke tests
run_smoke_tests = CONF['run_smoke_tests']

# This is a update to allow dev packages
# Force success - not worried if this step fails, since we generally only use it for development.
enable_local_repo = CONF['enable_local_repo']
puts "vagrant conf local repo enabled:  #{enable_local_repo}"
# master node hostname
bigtop_master = "bigtop1.vagrant"

$script = <<SCRIPT
service iptables stop
chkconfig iptables off
cat /dev/null > /etc/hosts
echo "Bigtop yum repo = #{repo}"
# Prepare puppet configuration file
mkdir -p /etc/puppet/hieradata
cp /bigtop-home/bigtop-deploy/puppet/hiera.yaml /etc/puppet
cp -r /bigtop-home/bigtop-deploy/puppet/hieradata/bigtop/ /etc/puppet/hieradata/
cat > /etc/puppet/hieradata/site.yaml << EOF
bigtop::hadoop_head_node: #{bigtop_master}
hadoop::hadoop_storage_dirs: [/data/1, /data/2]
Bigtop::bigtop_yumrepo_uri: #{repo}
bigtop::jdk_package_name: java-1.7.0-openjdk-devel.x86_64
hadoop_cluster_node::cluster_components: #{components}
EOF
SCRIPT

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # manage /etc/hosts by hostmanager plugin(https://github.com/smdahlen/vagrant-hostmanager)
  # use vagrant-cachier to cache packages at local(https://github.com/fgrehm/vagrant-cachier)
  config.hostmanager.enabled = true

  # use vagrant-cachier to cache packages at local(https://github.com/fgrehm/vagrant-cachier)
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.scope = :box
  end

  # nodes definition
  (1..num_instances).each do |i|
    config.vm.define "bigtop#{i}" do |bigtop|

      bigtop.vm.box = CONF['box']
      bigtop_hostname="bigtop#{i}.vagrant"
      bigtop_ip="10.10.10.1#{i}"

      bigtop.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--memory", CONF['memory_size']]
	vb.customize ['modifyvm', :id, '--cpus', CONF['number_cpus']]
      end

      bigtop.vm.network :private_network, ip: bigtop_ip
      bigtop.vm.hostname = bigtop_hostname

      # three levels up is the bigtop "home" directory.
      # the current directory has puppet recipes which we need for provisioning.
      bigtop.vm.synced_folder "../../../", "/bigtop-home"

      # We also add the bigtop-home output/ dir, so that locally built rpms will be available.
      
      puts "Adding output/ repo ? #{enable_local_repo}"
     
      # carry on w/ installation
      bigtop.vm.provision :shell do |shell|
        shell.path = "../utils/setup-env-" + distro + ".sh"
        shell.args = ["#{enable_local_repo}"]
      end
      bigtop.vm.provision "shell", inline: $script
      bigtop.vm.provision :hostmanager

      # deploy Apache Hadoop and it's ecosystem
      bigtop.vm.provision :puppet do |puppet|
        puppet.module_path = "../../puppet/modules/"
        puppet.manifests_path =  "../../puppet/manifests/"
        puppet.manifest_file  = "site.pp"
        puppet.options = "--debug"
      end

      if run_smoke_tests then
        if i==num_instances then
          puts "creating provisioner directive for running tests"
          bigtop.vm.provision "shell", path: "../utils/smoke-tests.sh"
        else
          puts "Not creating provisioner directive for tests yet... only on vm #{i} of #{num_instances}"
        end
      end

    end
  end

end
