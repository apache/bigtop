<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Licensed to the Apache Software Foundation (ASF) under one or more       -->
<!-- contributor license agreements.  See the NOTICE file distributed with    -->
<!-- this work for additional information regarding copyright ownership.      -->
<!-- The ASF licenses this file to You under the Apache License, Version 2.0  -->
<!-- (the "License"); you may not use this file except in compliance with     -->
<!-- the License.  You may obtain a copy of the License at                    -->
<!--                                                                          -->
<!--     http://www.apache.org/licenses/LICENSE-2.0                           -->
<!--                                                                          -->
<!-- Unless required by applicable law or agreed to in writing, software      -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,        -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. -->
<!-- See the License for the specific language governing permissions and      -->
<!-- limitations under the License.                                           -->

<configuration>

<!-- Hive Configuration can either be stored in this file or in the hadoop configuration files  -->
<!-- that are implied by Hadoop setup variables.                                                -->
<!-- Aside from Hadoop setup variables - this file is provided as a convenience so that Hive    -->
<!-- users do not have to edit hadoop configuration files (that may be managed as a centralized -->
<!-- resource).                                                                                 -->

<!-- Hive Execution Parameters -->

<% if @hive_tez_container_size %>
<property>
  <name>hive.tez.container.size</name>
  <value><%= @hive_tez_container_size %></value>
</property>
<% end %>

<% if @hive_tez_cpu_vcores %>
<property>
  <name>hive.tez.cpu.vcores</name>
  <value><%= @hive_tez_cpu_vcores %></value>
</property>
<% end %>

<% if @hbase_master != "" %>
<property>
  <name>hbase.master</name>
  <value><%= @hbase_master %></value>
  <description>http://wiki.apache.org/hadoop/Hive/HBaseIntegration</description>
</property>
<% end %>

<% if @hbase_zookeeper_quorum != "" %>
<property>
  <name>hbase.zookeeper.quorum</name>
  <value><%= @hbase_zookeeper_quorum %></value>
  <description>http://wiki.apache.org/hadoop/Hive/HBaseIntegration</description>
</property>
<% end %>

<% if @hive_zookeeper_quorum != "" %>
<property>
  <name>hive.zookeeper.quorum</name>
  <value><%= @hive_zookeeper_quorum %></value>
  <description>Zookeeper quorum used by Hive's Table Lock Manager</description>
</property>
<% end %>

<property>
  <name>hive.support.concurrency</name>
  <value><%= @hive_support_concurrency %></value>
  <description>Enable Hive's Table Lock Manager Service</description>
</property>

<property>
  <name>hive.execution.engine</name>
  <value><%= @hive_execution_engine %></value>
</property>

<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:derby:;databaseName=/var/lib/hive/metastore/metastore_db;create=true</value>
  <description>JDBC connect string for a JDBC metastore</description>
</property>

<property>
  <name>javax.jdo.option.ConnectionDriverName</name>
  <value>org.apache.derby.jdbc.EmbeddedDriver</value>
  <description>Driver class name for a JDBC metastore</description>
</property>


<property>
   <name>hive.server2.allow.user.substitution</name>
   <value>true</value>
</property>

<property>
   <name>hive.server2.enable.doAs</name>
   <value>true</value>
</property>

<property>
   <name>hive.server2.thrift.port</name>
   <value><%= @server2_thrift_port %></value>
</property>

<property>
   <name>hive.server2.thrift.http.port</name>
   <value><%= @server2_thrift_http_port %></value>
</property>

<% if @metastore_uris != "" %>
<property>
   <name>hive.metastore.uris</name>
   <value><%= @metastore_uris %></value>
</property>
<% end %>

<property>
   <name>hive.security.metastore.authorization.manager</name>
   <value>org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider</value>
</property>

<% if @kerberos_realm != "" %>
<property>
    <name>hive.server2.authentication</name>
    <value>KERBEROS</value>
</property>
<property>
    <name>hive.server2.authentication.kerberos.principal</name>
    <value>hive/_HOST@<%= @kerberos_realm %></value>
</property>
<property>
    <name>hive.server2.authentication.kerberos.keytab</name>
    <value>/etc/hive.keytab</value>
</property>

<property>
    <name>hive.metastore.kerberos.principal</name>
    <value>hive/_HOST@<%= @kerberos_realm %></value>
</property>
<property>
    <name>hive.metastore.kerberos.keytab.file</name>
    <value>/etc/hive.keytab</value>
</property>
<property>
    <name>hive.metastore.pre.event.listeners</name>
    <value>org.apache.hadoop.hive.ql.security.authorization.AuthorizationPreEventListener</value>
</property>
<property>
    <name>hive.metastore.sasl.enabled</name>
    <value>true</value>
</property>
<% end %> 

<property>
  <name>hive.metastore.schema.verification</name>
   <value><%= @metastore_schema_verification %></value>
  <description>
    Enforce metastore schema version consistency.
    True: Verify that version information stored in is compatible with one from Hive jars.  Also disable automatic
          schema migration attempt. Users are required to manually migrate schema after Hive upgrade which ensures
          proper metastore schema migration. (Default)
    False: Warn if the version information stored in metastore doesn't match with one from in Hive jars.
  </description>
</property>
<% if @metastore_schema_verification == false %>
<property>
   <name>datanucleus.schema.autoCreateAll</name>
   <value>true</value>
  <description>
    Creates necessary schema on a startup if one does not exist. Reset this to false, after creating it once.
    datanucleus.schema.autoCreateAll is disabled if hive.metastore.schema.verification is true.
  </description>
</property>
<% end %>
</configuration>
