diff --git a/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java
index 9be691485..bdbd711d1 100644
--- a/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java
+++ b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java
@@ -788,7 +788,7 @@ public void postStartMaster(ObserverContext<MasterCoprocessorEnvironment> ctx) t
 			Throwable var3 = null;
 
 			try {
-				if(!admin.tableExists(AccessControlLists.ACL_TABLE_NAME)) {
+				if(!admin.tableExists(PermissionStorage.ACL_TABLE_NAME)) {
 					createACLTable(admin);
 				}
 			} catch (Throwable var12) {
@@ -812,8 +812,8 @@ public void postStartMaster(ObserverContext<MasterCoprocessorEnvironment> ctx) t
 	}
 
 	private static void createACLTable(Admin admin) throws IOException {
-		ColumnFamilyDescriptor cfd = ColumnFamilyDescriptorBuilder.newBuilder(AccessControlLists.ACL_LIST_FAMILY).setMaxVersions(1).setInMemory(true).setBlockCacheEnabled(true).setBlocksize(8192).setBloomFilterType(BloomType.NONE).setScope(0).build();
-		TableDescriptor td = TableDescriptorBuilder.newBuilder(AccessControlLists.ACL_TABLE_NAME).addColumnFamily(cfd).build();
+		ColumnFamilyDescriptor cfd = ColumnFamilyDescriptorBuilder.newBuilder(PermissionStorage.ACL_LIST_FAMILY).setMaxVersions(1).setInMemory(true).setBlockCacheEnabled(true).setBlocksize(8192).setBloomFilterType(BloomType.NONE).setScope(0).build();
+		TableDescriptor td = TableDescriptorBuilder.newBuilder(PermissionStorage.ACL_TABLE_NAME).addColumnFamily(cfd).build();
 		admin.createTable(td);
 	}
 
@@ -1403,7 +1403,7 @@ public void getUserPermissions(RpcController controller, AccessControlProtos.Get
 				});
 				if (_userUtils.isSuperUser(user)) {
 					perms.add(new UserPermission(_userUtils.getUserAsString(user),
-					                             Permission.newBuilder(AccessControlLists.ACL_TABLE_NAME).withActions(Action.values()).build()));
+					                             Permission.newBuilder(PermissionStorage.ACL_TABLE_NAME).withActions(Action.values()).build()));
 				}
 			}
 			response = AccessControlUtil.buildGetUserPermissionsResponse(perms);
