#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -ex

#load versions
. `dirname $0`/bigtop.bom

. /etc/os-release

if [[ $ID = "centos" && $VERSION_ID = "7" && ( $HOSTTYPE = "aarch64" || $HOSTTYPE = "powerpc64le" ) ]]; then
  # BIGTOP-4076: newer g++ is required for rebuilding watcher used by flink-runtime-web    
  BUILD_ENV="scl enable devtoolset-9 -- "
fi

# husky have to be executed from the path that .git exists
git_path="$(cd $(dirname $0)/../../../.. && pwd)"
cmd_from="cd ../.. && husky install flink-runtime-web/web-dashboard/.husky"
repl_from=$(sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//' <<<"$cmd_from")
if [[ "$0" == *rpm* ]]; then
  package_json_path="build/flink/rpm/BUILD/flink-$FLINK_VERSION/flink-runtime-web/web-dashboard"
  cmd_to="cd $git_path && husky install $package_json_path/.husky"
  repl_to=$(sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//' <<<"$cmd_to")
elif [[ "$0" == *debian* ]]; then
  package_json_path="output/flink/flink-$FLINK_VERSION/flink-runtime-web/web-dashboard"
  cmd_to="cd $git_path && husky install $package_json_path/.husky"
  repl_to=$(sed -e 's/[&\\/]/\\&/g; s/$/\\/' -e '$s/\\$//' <<<"$cmd_to")
fi
sed -i "s/$repl_from/$repl_to/" flink-runtime-web/web-dashboard/package.json

# Use Maven to build Flink from source
${BUILD_ENV} ./mvnw install $FLINK_BUILD_OPTS -Drat.skip=true -DskipTests -Dhadoop.version=$HADOOP_VERSION "$@"
cd flink-dist
${BUILD_ENV} ../mvnw install $FLINK_BUILD_OPTS -Drat.skip=true -DskipTests -Dhadoop.version=$HADOOP_VERSION "$@"
