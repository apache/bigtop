#!/bin/bash

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -ex

if ! charms.reactive is_state 'apache-bigtop-resourcemanager.ready'; then
    action-fail 'ResourceManager not yet ready'
    exit
fi

RESULTS_FILE=`action-get resfile`
OPTIONS=''

MODE=`action-get mode`
NUMFILES=`action-get numfiles`
FILESIZE=`action-get filesize`
BUFFERSIZE=`action-get buffersize`

if [ $MODE == 'read' ] ; then
        OPTIONS="${OPTIONS} -read"
else
        OPTIONS="${OPTIONS} -write"
fi

OPTIONS="${OPTIONS} -nrFiles ${NUMFILES}"
OPTIONS="${OPTIONS} -fileSize ${FILESIZE}"
OPTIONS="${OPTIONS} -bufferSize ${BUFFERSIZE}"
OPTIONS="${OPTIONS} -resFile ${RESULTS_FILE}"

# create dir to store results
RUN=`date +%s`
RESULT_DIR=/opt/TestDFSIO-results
RESULT_LOG=${RESULT_DIR}/${RUN}.log
mkdir -p ${RESULT_DIR}
chown -R ubuntu:ubuntu ${RESULT_DIR}


# clean out any previous data (must be run as ubuntu)
su ubuntu << EOF
. /etc/default/hadoop
echo 'cleaning data'
hadoop jar \${HADOOP_MAPRED_HOME}/hadoop-mapreduce-*test*.jar TestDFSIO -clean
EOF

benchmark-start
START=`date +%s`
# NB: Escaped vars in the block below (e.g., \${HADOOP_HOME}) come from
# /etc/environment while non-escaped vars (e.g., ${IN_DIR}) are parameterized
# from this outer scope
su ubuntu << EOF
. /etc/default/hadoop
echo 'running benchmark'
cd /tmp/
hadoop jar \${HADOOP_MAPRED_HOME}/hadoop-mapreduce-*test*.jar TestDFSIO $OPTIONS &> ${RESULT_LOG}
EOF
STOP=`date +%s`
benchmark-finish

`cat ${RESULTS_FILE} ${RESULT_LOG} | $CHARM_DIR/actions/parseNNBench.py`

DURATION=`expr $STOP - $START`
benchmark-composite "${DURATION}" 'secs' 'asc'
