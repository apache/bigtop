# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

Source: hama
Section: misc
Priority: extra
Maintainer: BigTop
Build-Depends: debhelper (>= 9)
Standards-Version: 3.9.4
Homepage: http://hama.apache.org

Package:  hama
Architecture: all
Depends: hadoop, bigtop-utils, zookeeper
Description: Hama is a pure BSP(Bulk Synchronous Parallel) computing
 framework on
 top of HDFS (Hadoop Distributed File System) for massive scientific
 computations such as matrix, graph and network algorithms.

Package:  hama-bspmaster
Architecture: all
Depends: hama (= ${source:Version})
Description: Maintain the global state of Apache Hama services
 BSPMaster is responsible for the following:
 - Maintaining groom server status.
 - Maintaining supersteps and other counters in a cluster.
 - Maintaining job progress information.
 - Scheduling Jobs and assigning tasks to groom servers
 - Distributing execution classes and configuration across groom servers.
 - Providing users with the cluster control interface (web and console based).

Package:  hama-groom
Architecture: all
Depends: hama (= ${source:Version})
Description: A Groom Server (shortly referred to as groom) is a process that launches bsp tasks assigned by BSPMaster
 A Groom Server (shortly referred to as groom) is a process that launches bsp tasks
 assigned by BSPMaster. Each groom contacts the BSPMaster, and it takes assigned
 tasks and reports its status by means of periodical piggybacks with BSPMaster.
 Each groom is designed to run with HDFS or other distributed storages. Basically,
 a groom server and a data node should be run on one physical node to get the best performance. (Data-locality)

Package:  hama-conf-pseudo
Architecture: all
Depends: hama (= ${source:Version})
Description: Apache Hama installation in pseudo-distributed mode
 Installation of this RPM will setup your machine to run in pseudo-distributed mode
 where each Apache Hama daemon runs in a separate Java process.

Package:  hama-doc
Architecture: all
Depends: hama (= ${source:Version})
Description: Apache Hama Documentation
 Documentation for Apache Hama


